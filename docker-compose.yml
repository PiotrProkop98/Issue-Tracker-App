version: '3.8'

networks:
    app-network:
        driver: bridge

services:
  react:
    container_name: react
    image: node:alpine
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    entrypoint: ['npm']
    build:
      context: .
      dockerfile: Dockerfile-react
    volumes:
      - ./:/var/www
      - /app/node_modules
    ports:
      - 3000:3000
      - 3001:3001
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network

  app:
    container_name: app
    image: laravel8-php-fpm-80
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    env_file:
      - .env
    build:
      context: ./
      dockerfile: Dockerfile
    volumes: 
      - ./:/var/www
    networks: 
      - app-network

  nginx:
    image: nginx:1.19.8-alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - 8100:80
    volumes:
      - ./:/var/www
      - ./nginx/conf:/etc/nginx/conf.d
    networks:
      - app-network

  mysql:
    image: mysql:5.7.33
    container_name: mysql
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: bug_tracker
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_PASSWORD: 12345
      MYSQL_USER: piotr
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql/data:/var/lib/mysql
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    restart: unless-stopped
    ports:
      - 8025:8025
    networks:
      - app-network